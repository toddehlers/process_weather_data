("=============================================================================")
("          EARTHSHAPE CHILE WEATHER STATIONS DATA MANAGEMENT (V9, Sep2020)    ")
("=============================================================================")
@author: M.Reza Ershadi / University of TÃ¼bingen
         mohammadreza.ershadi@uni-tuebingen.de 
         (mreza.ershadi6789@gmail.com)
         Version 9 - Sep 17 2020
Written in Python3 using the following libraries:
1-sys
2-subprocess
3-os
4-winsound (just for windows)
5-numpy
6-pandas
7-scipy
8-matplotlib
9-tkinter
10-openpyxl
=============================================================================
IMPORTANT:
This program is written at University of TÃ¼bingen to manage EARTHSHAPE CHILE WEATHER STATIONS DATA.
What it does:
1- It can read the local and satellite data (*.csv)
2- It can append two local files (vertically that the newer goes below the older file)
    *Both files must be from the same station
    *There should not be any time over lap between the two files
3- It can use the local data to fill the gaps in the satellite files
    *Both local and satellite files should be from the same station
    *Always use appended local files to fill the satellite gaps
        **The format of appended files generated by this program has better compatibility to fill satellite gaps
4- It can plot all the recorded parameters in both local and satellite files for simple demonstration and for publication
5- It can generate monthly mean and standard deviation of the recorded pressure and temperature
6- Filtering data
    *Before running any process in this program you need to choose a filtering option
    1- You can filter the data which were recorded during the maintenance time (you need a maintenance file for this)
    2- You can filet the data if their values are not realistic (anomalies)
    We are using 6 filters:
    filter1: (sat/loc) -----> based on maintenance file
    Read the MAINTENANCE file and replace all the data recorded during the MAINTENANCE time by "nan"

    filter2: (sat/loc) -----> based on soil temperature
    If "GrTemp_Avg" and "VWC_Avg" both are recorded as zero all the following parameters are replaced by "nan"
    ["VWC_Avg","GrTemp_Avg","EC_Avg","P_Avg","PA_Avg","VR_Avg"]

    filter3: (loc) -----> based on wind diag
    If "WSDiag" is recorded as number which is not zero all the following parameters are replaced by "nan"
    ["WS_ms_Avg","WS_ms_max","WS_ms_min","WindDir_Avg","WS_ms_S_WVT","WindDir_D1_WVT","WSData2_WVc"]

    filter4: (sat/loc) -----> based on wind average speed
    If "WS_ms_Avg" is larger than 10 [m/s] all the following parameters are replaced by "nan"
    ["WS_ms_Avg","WS_ms_max","WS_ms_min","WindDir_Avg","WS_ms_S_WVT","WindDir_D1_WVT","WSData2_WVc"]

    filter5: (sat/loc) -----> based on wind maximum speed
    If "WS_ms_max" is larger than 20 [m/s] all the following parameters are replaced by "nan"
    ["WS_ms_Avg","WS_ms_max","WS_ms_min","WindDir_Avg","WS_ms_S_WVT","WindDir_D1_WVT","WSData2_WVc"]

    filter6: (sat/loc) -----> based on wind direction
    If "WindDir_Avg" is larger than 360 all the following parameters are replaced by "nan"
    ["WS_ms_Avg","WS_ms_max","WS_ms_min","WindDir_Avg","WS_ms_S_WVT","WindDir_D1_WVT","WSData2_WVc"]
=============================================================================
----------------------MENU #1 (File Report)----------------------
-Read any csv file (Local/Satellite)
-Display a basic report
-Display number of rows with missing parameters (None)
    *There is at least one parameter in that row(TimeStamp) which is reported as "None"
-Display the "TimeStamp" situation including different recording time interval
-The missing TimeStamp and their corresponding missing Parameters can be saved as a *.txt file
----------------------MENU #2 Plot----------------------
-Select type of the plot (normal or publication)
-Ask for the MAINTENANCE file
    * Apply filtering (maintenance & anomalies)
    * Apply filtering (anomalies)
    * No filtering
-Import a *.csv file (local or satellite) 
-Display a basic report
-Check the time intervals
-check the columns and parameters
-Check the units
-Filter the anomalies and maintenances (optional)
-Selected parameter(s) to plot 
    *based on the columns in the imported file
-Select a time period
    *Whole dataset
    *Specific time period
-Select type of Data
    *Original data
    *De-trended data
    *Moving average (original data / de-trended data)
    *Linear trend (linear regression)
        **Linear trend of the whole dataset or a specific period of time
-Select plot style
    *Linear
    *Scatter
    *Both
-Select number of figures per page (max 3)
-Select Save options (create a figure folder)
    *.jpg
    *.png
    *.pdf
    *.csv (only data in the plot)
----------------------MENU #3 Append files----------------------
-Ask for the MAINTENANCE file
    * Apply filtering (maintenance & anomalies)
    * Apply filtering (anomalies)
    * No filtering
-Import the first *.csv file (local or satellite)
-Display a basic report of the first file
-Import the second *.csv file (local or satellite)
-Display a basic report of the second file
-Check the compatibility of the two files
    *Same stations
    *No time overlapping
-Check the time intervals
-check the columns and parameters
-Check the units
-Filter the anomalies and maintenances (optional)
-Report time gaps between the two files (it fills the gaps with "None")
-Save the appended file as *.csv
-Display the path and the name of the new file
-Display a basic report of the new file
----------------------MENU #4 Fill the satellite gaps----------------------
-Ask for the MAINTENANCE file
    * Apply filtering (maintenance & anomalies)
    * Apply filtering (anomalies)
    * No filtering
-Import a Satellite.csv
-Display a basic report (satellite file)
-Import a Local.csv (same station)
-Display a basic report (local file)
-Filter the anomalies and maintenances (optional)
-Report as text and figure
    *number of missing data in satellite
    *number of gaps that can be filled with the imported local file
-Save the new satellite file as *.CSV
-Display the path and the name of the new file
-Display a basic report of the new file
----------------------MENU #5 (Monthly Temperature and Pressure mean & std)----------------------
-Ask for the MAINTENANCE file
    * Apply filtering (maintenance & anomalies)
    * Apply filtering (anomalies)
    * No filtering
-Import a *.csv file (local or satellite) 
-Display a basic report
-Check the time intervals
-check the columns and parameters
-Check the units
-Filter the anomalies and maintenances (optional)
-Separate data into different months and count the days in each monthly
-Only considers complete months for the next step
-Calculating monthly mean and standard deviation of Temperature and Precipitation
-Save the results as Monthly_mean_std.xlsx with each *.csv file as a new sheet
=============================================================================
FUNCTIONS
ALL THE FUNCTIONS (23) IN THE PROGRAM (briefly explained)
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
1***************defwhat:
Display the "MAIN MENU" and ask the user to choose
This menu can be displayed in two ways
Short one and extended one
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
2***************def_help:
Open the "HELP.txt" using the default OS program for *.txt file
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
3***************defuiopen:
It opens a file dialog and user can easily select a file
It recognize the file type (satellite or local) 
Extract the path of the selected file, information from the
initial lines of the selected file and the main data
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
4***************defuisave:
It opens a file dialog and let the user to save the new file
It need "si" as the first line of the csv file, "pi" as all 
the rows related to the parameters and "data" and the type 
of the file as local or satellite
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
5***************definterp:
Analysis the recorded timestamps and their intervals
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
6***************defext_info:
This function extracts and print the information of the 
selected file such as: 
File name
Data type
Station name
Number of columns
First recorded Data
Last recorded Data
Rows with missing value
*Function in use:
1-def_intper
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
7***************definterval_fix:
It unifies time intervals
If there is more than one time interval in the file or
if there are some gaps (like missing rows) it makes new row(s) 
filled by "nan" to correct the whole file with one unique 
timestamp based on the file type
"30 min" for local files
"1 hour" for satellite files 
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
8***************deffix_columns
Fixes the columns names and parameters
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
9***************defcheck_int
Check and find the rows with missing data
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
10***************defmaint
This function applies maintenances and anomalies filet to the data

filter1: (sat/loc) -----> based on maintenance file
Read the MAINTENANCE file and replace all the data recorded during the MAINTENANCE time by "nan"

filter2: (sat/loc) -----> based on soil temperature
If "GrTemp_Avg" and "VWC_Avg" both are recorded as zero all the following parameters are replaced by "nan"
["VWC_Avg","GrTemp_Avg","EC_Avg","P_Avg","PA_Avg","VR_Avg"]

filter3: (loc) -----> based on wind diag
If "WSDiag" is recorded as number which is not zero all the following parameters are replaced by "nan"
["WS_ms_Avg","WS_ms_max","WS_ms_min","WindDir_Avg","WS_ms_S_WVT","WindDir_D1_WVT","WSData2_WVc"]

filter4: (sat/loc) -----> based on wind average speed
If "WS_ms_Avg" is larger than 10 [m/s] all the following parameters are replaced by "nan"
["WS_ms_Avg","WS_ms_max","WS_ms_min","WindDir_Avg","WS_ms_S_WVT","WindDir_D1_WVT","WSData2_WVc"]

filter5: (sat/loc) -----> based on wind maximum speed
If "WS_ms_max" is larger than 20 [m/s] all the following parameters are replaced by "nan"
["WS_ms_Avg","WS_ms_max","WS_ms_min","WindDir_Avg","WS_ms_S_WVT","WindDir_D1_WVT","WSData2_WVc"]

filter6: (sat/loc) -----> based on wind direction
If "WindDir_Avg" is larger than 360 all the following parameters are replaced by "nan"
["WS_ms_Avg","WS_ms_max","WS_ms_min","WindDir_Avg","WS_ms_S_WVT","WindDir_D1_WVT","WSData2_WVc"]

*Adds a flag to the first line of the data as filtered
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
11***************defEC_unit
Fixes EC_Avg unit for local files
Convert the unit of "EC_Avg" to mS/m for the data before May 2017
 La Campana: 2017-05-08 12:30
 Nahuelbuta: 2017-05-05 16:00
 Santa Gracia: 2017-05-15 16:00
 Pan de AzÃºcar: 2017-05-11 11:30
"EC_Avg" * 100 before the above date
"EC_Avg" / 10 after the above date
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
12***************defmissing_ext
Extract missing data and time periods as a .txt report
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
13***************deffile_info
This function extracts the file information and print a report of it
Checks if the recording time intervals are unique
There is no input or output for this function
Three functions are using inside this function:
1-defuiopen: opens a file dialog for the user to import a csv.file
2-defext_info: extracts the selected files info and print a report of it
3-defmissing_ext: looks for the missing values and make a report of them as .txt
*Function in use:
1-defuiopen
2-defext_info
3-defmissing_ext
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
14***************deftrend
Calculates the linear trend of the data
Removes the linear trend from the data
Calculates the moving average
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
15***************defrun_plot_normal
Plot the data
*Function in use:
1-defuiopen
2-defcheck_int
3-definterval_fix
4-deffix_columns
5-defEC_unit
6-defmaint
7-deftrend
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
16***************defrun_plot_TODD
Plot in publication format
Plots any parameters in different types from the selected file
line-scatter-line&scatter
1,2 or 3 subplots per figure
Put a table below the plots with mean annual, median, standard deviation and percentile95
*Function in use:
1-defuiopen
2-defcheck_int
3-definterval_fix
4-deffix_columns
4-defEC_unit
5-defmaint
6-deftrend
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
17***************defcheck_columns
During the appending process if the two selected files have columns which
are not similar (names, order of the names and number of columns) it finds them
and correct them. This process is based on comparing each file by a set of
reference columns name and order, then identifies the extra and missing one and
add them. Of course these new columns must be filled by "nan"
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
18***************defapnd_strt
Start the appending process
*Function in use:
1-definterval_fix
2-defuisave
3-defuiopen
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
19***************defrun_append
It appends two local files below each other, before the appending process it checks
which of the two selected files is older and put it in top of the newer one,
It checks the number of columns and the time gaps at the boundary of the selected files
New columns after columns correction and new rows after time gaps (missing rows)
correction will be filled by "nan".
*Function in use:
1-defuiopen
2-defcheck_int
3-definterval_fix
4-deffix_columns
5-defEC_unit
6-defmaint
7-defapnd_strt
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
20***************deffill_comp
Visualize how the local file can fill the satellite file
Reaport number of gaps in satellite file
Number of gaps which can be filled by the local data
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
21***************deffill_run
Start to fill the gaps in the satellite file based on the local data
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
22***************defsat_fill
This function finds the row(s) in the satellite file which at least have one
missing data ("None"). It extract the time of that row, find the similar time in
the relevant local file and replace that missing row with its local data
The replacing process is a bit tricky since the satellite data was recorded every
1 hour and the local data every 30 minutes, therefore to fill the missing satellite
row an appropriate calculation for each parameter must be used. for example:
to fill air temperature at 14:00 in satellite file, the average of 14:00 and 13:30 at
local file must be calculated. for different parameter it's different
(could be also sum or max or min). At the end it check the new file and ask for save
*Function in use:
1-defuiopen
2-defcheck_int
3-definterval_fix
4-deffix_columns
5-defEC_unit
6-defmaint
7-deffill_comp
8-deffill_run
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
23***************defexcel
calculate monthly mean and std of temperature and precipitation
*Function in use:
1-defuiopen
2-defcheck_int
3-definterval_fix
4-deffix_columns
5-defEC_unit
6-defmaint
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO